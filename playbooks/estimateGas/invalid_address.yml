---

- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"
  vars:
    account1: account_1_address
    account2: account_2_address
    account5: account_5_address
    invalid_address: thisistheaddressofaninvalidaddress

  tasks:
#################### Send account.dat file to Node1 && Node2 ####################
  - name: Accounts.dat to Node1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Accounts.dat to Node2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch blockchain ####################
  - name: Launch node1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 90
    poll: 0

  - name: Launch node2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 90
    poll: 0

  - name: Launch node3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 90
    poll: 0

  - name: Launch node4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 90
    poll: 0

  - name: Launch node5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 90
    poll: 0

  - name: Wait for blockchain initialization
    wait_for:
      timeout: 20

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### SendFromMiner to account1  ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_1

  - debug:
      msg: 'Account1 balance: {{ account1Balance_1.stdout_lines[0][16:] }}'

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_1

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_1.stdout_lines[0][16:] }}'


#################### Create smart contract ####################
  - name: Create smart contract
    shell: ./cli send -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/step_recorder.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: smart_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ smart_contract.stdout_lines[0][18:] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_2

  - debug:
      msg: 'Account1 balance: {{ account1Balance_2.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_1.stdout_lines[0][16:]|int - 100|int }}, but returned {{ account1Balance_2.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_2.stdout_lines[0][16:]|int != account1Balance_1.stdout_lines[0][16:]|int - 100|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_2

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_2.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected {{ account2Balance_1.stdout_lines[0][16:]|int }} but returned {{ account2Balance_2.stdout_lines[0][16:] }}"
    when: account2Balance_2.stdout_lines[0][16:]|int != account2Balance_1.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Estimate Gas - from address is invalid ####################
  - name: Estimate Gas - from address is invalid
    shell: ./cli estimateGas -from {{ invalid_address }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 10 -tip 0 -gasLimit 30000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","5000"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: estimate_gas
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ estimate_gas }}'
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: "Expected an error message about the invalid address, but returned {{ estimate_gas }}"
    when: inventory_hostname in groups['NODE1'] and estimate_gas.stdout_lines[0][7:] != "'from' address is not valid!"
    ignore_errors: true


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_3

  - debug:
      msg: 'Account1 balance: {{ account1Balance_3.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_2.stdout_lines[0][16:]|int }}, but returned {{ account1Balance_3.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_3.stdout_lines[0][16:]|int != account1Balance_2.stdout_lines[0][16:]|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_3

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_3.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected the value to be {{ account2Balance_2.stdout_lines[0][16:]|int }} but returned {{ account2Balance_3.stdout_lines[0][16:] }}"
    when: account2Balance_3.stdout_lines[0][16:]|int != account2Balance_2.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Terminate playbook ####################
  - name: Wait til the blockchain terminates
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: blockchainHeight.stdout_lines[0][7:] == "server is not reachable!"
    retries: 20
    delay: 10
    ignore_errors: true

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send account.dat file to Node1 && Node2 ####################
  - name: Accounts.dat to Node1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Accounts.dat to Node2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch blockchain ####################
  - name: Launch node1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 90
    poll: 0

  - name: Launch node2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 90
    poll: 0

  - name: Launch node3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 90
    poll: 0

  - name: Launch node4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 90
    poll: 0

  - name: Launch node5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 90
    poll: 0

  - name: Wait for blockchain initialization
    wait_for:
      timeout: 20

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### SendFromMiner to account1  ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_1

  - debug:
      msg: 'Account1 balance: {{ account1Balance_1.stdout_lines[0][16:] }}'

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_1

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_1.stdout_lines[0][16:] }}'


#################### Create smart contract ####################
  - name: Create smart contract
    shell: ./cli send -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/step_recorder.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: smart_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ smart_contract.stdout_lines[0][18:] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_2

  - debug:
      msg: 'Account1 balance: {{ account1Balance_2.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_1.stdout_lines[0][16:]|int - 100|int }}, but returned {{ account1Balance_2.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_2.stdout_lines[0][16:]|int != account1Balance_1.stdout_lines[0][16:]|int - 100|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_2

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_2.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected {{ account2Balance_1.stdout_lines[0][16:]|int }} but returned {{ account2Balance_2.stdout_lines[0][16:] }}"
    when: account2Balance_2.stdout_lines[0][16:]|int != account2Balance_1.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Estimate Gas - address is valid but no accounts.dat ####################
  - name: Estimate Gas - address is valid but no accounts.dat
    shell: ./cli estimateGas -from {{ account5 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 10 -tip 0 -gasLimit 30000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","5000"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: estimate_gas
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ estimate_gas }}'
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: "Expected an error message about the insufficient balance, but returned {{ estimate_gas }}"
    when: inventory_hostname in groups['NODE1'] and estimate_gas.stdout_lines[0][12:] != "the balance is insufficient"
    ignore_errors: true


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_3

  - debug:
      msg: 'Account1 balance: {{ account1Balance_3.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_2.stdout_lines[0][16:]|int }}, but returned {{ account1Balance_3.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_3.stdout_lines[0][16:]|int != account1Balance_2.stdout_lines[0][16:]|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_3

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_3.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected the value to be {{ account2Balance_2.stdout_lines[0][16:]|int }} but returned {{ account2Balance_3.stdout_lines[0][16:] }}"
    when: account2Balance_3.stdout_lines[0][16:]|int != account2Balance_2.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Terminate playbook ####################
  - name: Wait til the blockchain terminates
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: blockchainHeight.stdout_lines[0][7:] == "server is not reachable!"
    retries: 20
    delay: 10
    ignore_errors: true

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send account.dat file to Node1 && Node2 ####################
  - name: Accounts.dat to Node1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Accounts.dat to Node2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible/accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch blockchain ####################
  - name: Launch node1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 90
    poll: 0

  - name: Launch node2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 90
    poll: 0

  - name: Launch node3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 90
    poll: 0

  - name: Launch node4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 90
    poll: 0

  - name: Launch node5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 90
    poll: 0

  - name: Wait for blockchain initialization
    wait_for:
      timeout: 20

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### SendFromMiner to account1  ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_1

  - debug:
      msg: 'Account1 balance: {{ account1Balance_1.stdout_lines[0][16:] }}'

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_1

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_1.stdout_lines[0][16:] }}'


#################### Create smart contract ####################
  - name: Create smart contract
    shell: ./cli send -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/step_recorder.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: smart_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ smart_contract.stdout_lines[0][18:] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_2

  - debug:
      msg: 'Account1 balance: {{ account1Balance_2.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_1.stdout_lines[0][16:]|int - 100|int }}, but returned {{ account1Balance_2.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_2.stdout_lines[0][16:]|int != account1Balance_1.stdout_lines[0][16:]|int - 100|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_2

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_2.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected {{ account2Balance_1.stdout_lines[0][16:]|int }} but returned {{ account2Balance_2.stdout_lines[0][16:] }}"
    when: account2Balance_2.stdout_lines[0][16:]|int != account2Balance_1.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Estimate Gas - from address is empty ####################
  - name: Estimate Gas
    shell: ./cli estimateGas -to {{ smart_contract.stdout_lines[0][18:] }} -amount 10 -tip 0 -gasLimit 30000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","5000"]}' -from
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: estimate_gas
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ estimate_gas }}'
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: "Expected , but returned {{ estimate_gas }}"
    when: inventory_hostname in groups['NODE1'] and estimate_gas.stderr_lines[0][:-7] != "flag needs an argument"
    ignore_errors: true


#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_3

  - debug:
      msg: 'Account1 balance: {{ account1Balance_3.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_2.stdout_lines[0][16:]|int }}, but returned {{ account1Balance_3.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_3.stdout_lines[0][16:]|int != account1Balance_2.stdout_lines[0][16:]|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_3

  - debug:
      msg: 'Account2 blanace: {{ account2Balance_3.stdout_lines[0][16:] }}'

  - name: Account2 balance test
    fail:
     msg: "Expected the value to be {{ account2Balance_2.stdout_lines[0][16:]|int }} but returned {{ account2Balance_3.stdout_lines[0][16:] }}"
    when: account2Balance_3.stdout_lines[0][16:]|int != account2Balance_2.stdout_lines[0][16:]|int
    ignore_errors: true


#################### Terminate playbook ####################
  - name: Wait til the blockchain terminates
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: blockchainHeight.stdout_lines[0][7:] == "server is not reachable!"
    retries: 20
    delay: 10
    ignore_errors: true

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']