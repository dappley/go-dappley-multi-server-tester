---

- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"
  vars:
    account1: account_1_address
    account2: account_2_address
    invalid_address: thisistheaddressofaninvalidaddress
    est_gasPrice: 0

  roles:
#################### Roles ####################
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/copy_account_address
      node_number: 1
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/copy_account_address
      node_number: 2
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/make_build
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/initialize_async
      node_number: 5
      async_runtime: 110
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/blockchain_status_check
      node_number: 5
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/add_producerAccount

  tasks:
#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli send -from dastXXWLe5pxbRYFhcyUq8T3wb5srWkHKa -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']
    register: transaction_result

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_1

  - name: Account1 balance test
    fail:
     msg: "Expected the account balance to be 100000, but returned {{ account1Balance_1.stdout_lines[0][16:] }}"
    ignore_errors: true
    when: account1Balance_1.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_1

  - name: Account2 balance test
    fail:
     msg: "Expected the account balance to be 0, but returned {{ account2Balance_1.stdout_lines[0][16:] }}"
    ignore_errors: true
    when: account2Balance_1.stdout_lines[0][16:]|int != 0|int

#################### Create Smart Contract ####################
  - name: Estimate Gas Price
    shell: ./cli estimateGas -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/step_recorder.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: estimated_gas_price
    when: inventory_hostname in groups['NODE1']

  - name: set estimated gas price
    set_fact: est_gasPrice="{{ estimated_gas_price.stdout_lines[0].split(":")[1] | int }}"
    when: inventory_hostname in groups['NODE1']

  - name: Create smart contract
    shell: ./cli send -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/step_recorder.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: smart_contract
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_2

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_1.stdout_lines[0][16:]|int - 100|int - est_gasPrice|int }}, but returned {{ account1Balance_2.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and account1Balance_2.stdout_lines[0][16:]|int != account1Balance_1.stdout_lines[0][16:]|int - 100|int - est_gasPrice|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_2

  - name: Account2 balance test
    fail:
     msg: "Expected {{ account2Balance_1.stdout_lines[0][16:]|int }} but returned {{ account2Balance_2.stdout_lines[0][16:] }}"
    when: account2Balance_2.stdout_lines[0][16:]|int != account2Balance_1.stdout_lines[0][16:]|int
    ignore_errors: true

#################### String gas price ####################
  - name: String gas price
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice one -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected an error message about the string gas price argument, but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:-13] != "invalid value \"one\" for flag -gasPrice"
    ignore_errors: true

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Check account1 && account2 balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance_3

  - name: Account1 balance test
    fail:
     msg: "Expected the value to be {{ account1Balance_2.stdout_lines[0][16:]|int }}, but returned {{ account1Balance_3.stdout_lines[0][16:] }}."
    ignore_errors: true
    when: account1Balance_3.stdout_lines[0][16:]|int != account1Balance_2.stdout_lines[0][16:]|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance_3

  - name: Account2 balance test
    fail:
     msg: "Expected the value to be {{ account2Balance_2.stdout_lines[0][16:]|int }} but returned {{ account2Balance_3.stdout_lines[0][16:] }}"
    when: account2Balance_3.stdout_lines[0][16:]|int != account2Balance_2.stdout_lines[0][16:]|int
    ignore_errors: true

#################### Terminate ####################
- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"
  roles:
    - role: /var/lib/jenkins/workspace/go-dappley-multi-server-tester/roles/terminate_async