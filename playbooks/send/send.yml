#################### Invalid File ####################
  - name: Create smart contract with an invalid file
    shell: ./cli send -from {{ account1 }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 1 -file ../jslib/invalid_file.js
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: smart_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ smart_contract.stdout }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail: 
     msg: "Expected the transaction to fail but returned {{ smart_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and smart_contract.stdout[7:] != "smart contract path \"../jslib/invalid_file.js\" is invalid."
    ignore_errors: true


#################### Invalid Gas Limit ####################
  ## Over balance gas limit
  - name: Over balance gas limit
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 300000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[12:] != "the balance is insufficient"
    ignore_errors: true

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  ## Negative gas limit
  - name: Negative gas limit
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit -30000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stderr_lines[0][:41] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stderr_lines[0] }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:41] != "invalid value \"-30000\" for flag -gasLimit"
    ignore_errors: true

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  ## Zero gas limit
  - name: Zero gas limit
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 0 -gasPrice 1 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[7:] != "transaction verification failed"
    ignore_errors: true

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  ## Insufficient gas limit
  - name: Insufficient gas limit
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 10000 -gasPrice 1 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[7:] != "transaction verification failed"
    ignore_errors: true

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  ## No gas limit
  - name: No gas limit
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasPrice 1 -data '{"function":"record","args":["account_2_address","500"]}' -gasLimit 
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stderr_lines[0] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stderr_lines[0] }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:22] != "flag needs an argument"
    ignore_errors: true


#################### Invalid Gas Price ####################

  ## Over balance gas price
  - name: Over balance gas price
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 20 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stdout }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[12:] != "the balance is insufficient"
    ignore_errors: true

  ## Zero gas price
  - name: Zero gas price
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice 0 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stdout }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[7:] != "gas price error, must be a positive number"
    ignore_errors: true

  ## Negative gas price
  - name: Negative gas price
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 30000 -gasPrice -1 -data '{"function":"record","args":["account_2_address","500"]}'
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stderr_lines[0] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:37] != "invalid value \"-1\" for flag -gasPrice"
    ignore_errors: true

  ## No gas price
  - name: No gas price
    shell: ./cli send -from {{ account1 }} -to {{ smart_contract.stdout_lines[0][18:] }} -amount 100 -tip 0 -gasLimit 30000  -data '{"function":"record","args":["account_2_address","500"]}' -gasPrice 
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ deploy_contract.stderr_lines[0] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ deploy_contract.stdout }}"
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:22] != "flag needs an argument"
    ignore_errors: true


#################### Missing Flag ####################

  ## No flag
  - name: No flag
    shell: ./cli send 
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but the transaction is approved."
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout_lines[0] == "Transaction is sent! Pending approval from network."

  ## -From and -GasPrice
  - name: Only -from and -gasPrice as flag
    shell: ./cli send -from {{ account1 }} -gasPrice 1
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but the transaction is approved."
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout_lines[1] == "Transaction is sent! Pending approval from network."

  ## -From, -GasPrice and -Amount
  - name: Only -from, -gasPrice and -amount as flag
    shell: ./cli send -from {{ account1 }} -gasPrice 1 -amount 100
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but the transaction is approved."
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout_lines[1] == "Transaction is sent! Pending approval from network."

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Send From Wrong Node ####################

  ## Deploy transaction from a different node
  - name: Deploy transaction from the node without the account.dat file
    shell: ./cli send -from {{ account1 }} -to {{ account2 }} -amount 100
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE5']

  - debug:
      msg: '{{ transaction_result.stdout_lines }}'
    when: inventory_hostname in groups['NODE5']

  - name: Transaction Test
    fail:
     msg: "Expected the transaction to fail but returned {{ transaction_result.stdout_lines }}"
    when: inventory_hostname in groups['NODE5'] and transaction_result.stdout_lines[0][7:] != "invalid account address."
    ignore_errors: true

  #  ------------------------------------------------------------