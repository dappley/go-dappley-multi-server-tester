---

- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"
  vars:
    account1: account_1_address
    account2: account_2_address
    invalid_address: thisistheaddressofaninvalidaddress

  tasks:
#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send to an invalid address ####################
  - name: Send to an invalid address
    shell: ./cli send -from {{ account1 }} -to {{ invalid_address }} -amount 50000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout == "Transaction is sent! Pending approval from network."

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send from an invalid address ####################
  - name: Send from an invalid address
    shell: ./cli send -from {{ invalid_address }} -to {{ account1 }} -amount 100
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected an error message but returned {{ transaction_result.stdout_lines[0] }}"
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout_lines[0][7:] != "'from' address is not valid!"

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send from and to an invalid address ####################
  - name: Send from and to the invalid address
    shell: ./cli send -from {{ invalid_address }} -to {{ invalid_address }} -amount 100
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  - name: Transaction Test
    fail:
     msg: "Expected an error message but returned {{ transaction_result.stdout_lines[0] }}"
    ignore_errors: true
    when: inventory_hostname in groups['NODE1'] and transaction_result.stdout_lines[0][7:] != "'from' address is not valid!"

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send to no address ####################
  - name: Send to no address
    shell: ./cli send -from {{ account1 }} -to -amount 50000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  # - name: Transaction Test
  #   fail:
  #    msg: "Expected a warning or an error message, but the transaction is approved."
  #   ignore_errors: true
  #   when: inventory_hostname in groups['NODE1'] and transaction_result.stdout == "Transaction is sent! Pending approval from network."

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send from no address ####################
  - name: Send from no address
    shell: ./cli send -from -to {{ account1 }} -amount 50000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  # - name: Transaction Test
  #   fail:
  #    msg: "Expected a warning or an error message, but the transaction is approved."
  #   ignore_errors: true
  #   when: inventory_hostname in groups['NODE1'] and transaction_result.stdout == "Transaction is sent! Pending approval from network."

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']





#################### Send Accounts.dat ####################
  - name: Copy accounts.dat to NODE1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  - name: Copy accounts.dat to NODE2
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node2/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE2']

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile


#################### Launch Blockchain ####################
  - name: Launch NODE1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 60
    poll: 0

  - name: Launch NODE2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 60
    poll: 0

  - name: Launch NODE3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 60
    poll: 0

  - name: Launch NODE4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 60
    poll: 0

  - name: Launch NODE5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 60
    poll: 0

  - name: Wait 10 seconds for blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10


#################### Add balance to account ####################
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 100000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Send to and from no address ####################
  - name: Send to and from no address
    shell: ./cli send -from -to -amount 50000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: transaction_result
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: '{{ transaction_result }}'
    when: inventory_hostname in groups['NODE1']

  # - name: Transaction Test
  #   fail:
  #    msg: "Expected a warning or an error message, but the transaction is approved."
  #   ignore_errors: true
  #   when: inventory_hostname in groups['NODE1'] and transaction_result.stdout == "Transaction is sent! Pending approval from network."

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10


#################### Check account balance ####################
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - name: Account1 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account1Balance.stdout_lines[0][16:]|int != 100000|int

  - name: Check account2 balance
    shell: ./cli getBalance -address {{ account2 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance

  - name: Account2 balance test
    fail:
     msg: "Expected a warning or an error message, but the transaction is approved."
    ignore_errors: true
    when: account2Balance.stdout_lines[0][16:]|int != 0|int


#################### Terminate ####################
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']

  - name: Remove /go-dappley/dapp/bin Node2
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE2']