---

- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"
  vars:
    account1: account_1_address
    invalid_address: thisistheaddressofaninvalidaddress

  tasks:
  ## Send account.dat files Node1
  - name: Accounts.dat to Node1
    copy:
      src: /var/lib/jenkins/workspace/go-dappley-ansible-accounts/node1/accounts.dat
      dest: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/bin/
    when: inventory_hostname in groups['NODE1']

  ## Build go-dappley
  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile

  ## Launch blockchain
  - name: Launch node1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 80
    poll: 0

  - name: Launch node2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 80
    poll: 0

  - name: Launch node3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 80
    poll: 0

  - name: Launch node4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 80
    poll: 0

  - name: Launch node5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 80
    poll: 0

  - name: Wait 10 seconds to launch blockchain
    wait_for:
      timeout: 10

  - name: Wait til the blockchain reaches height of 10
    shell: ./cli getBlockchainInfo
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: blockchainHeight
    until: (blockchainHeight.stdout_lines[1][17:]|replace(',',''))|int > (10)|int
    retries: 20
    delay: 10

  # - debug:
  #     msg: "Blockchain height: {{ blockchainHeight.stdout_lines[1][17:]|replace(',','') }}"

  ## Check account1 balance
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  # - debug:
  #     msg: 'Account1 balance: {{ account1Balance.stdout_lines[0][16:] }}'

  ## SendFromMiner to account1
  - name: Send money to account1
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 10000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    wait_for:
      timeout: 10

  ## Check account1 balance
  - name: Check account1 balance
    shell: ./cli getBalance -address {{ account1 }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance

  - debug:
      msg: 'Account1 balance: {{ account1Balance.stdout_lines[0][16:] }}'

  - name: Account1 balance test
    fail:
     msg: "Expected 5000 but returned {{ account1Balance.stdout_lines[0][16:] }}"
    when: account1Balance.stdout_lines[0][16:]|int != 10000|int
    ignore_errors: true

  ## Send more than minter's amount
  - name: Get miner address
    shell: ./cli getBlockchainInfo
    args: 
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: miner_address
    when: inventory_hostname in groups['NODE1']

  - name: Get miner balance
    shell: ./cli getBalance -address {{miner_address.stdout_lines[3][5:39]}}
    args: 
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: miner_balance
    when: inventory_hostname in groups['NODE1']

  - name: Send more than miner amount 
    shell: ./cli sendFromMiner -to {{ account1 }} -amount {{ miner_balance.stdout_lines[0][16:] + miner_balance.stdout_lines[0][16:]}}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][-18:] != "value out of range"
    ignore_errors: true

  ## Send negative amount
  - name: Send negative amount
    shell: ./cli sendFromMiner -to {{ account1 }} -amount -5000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stdout }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[7:] != "amount must be greater than zero!"
    ignore_errors: true

  ## Send zero amount
  - name: Send zero amount
    shell: ./cli sendFromMiner -to {{ account1 }} -amount 0
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stdout }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout[7:] != "amount must be greater than zero!"
    ignore_errors: true

  ## Send no amount (no argument)
  - name: Send no amount
    shell: ./cli sendFromMiner -to {{ account1 }} -amount
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:22] != "flag needs an argument"
    ignore_errors: true

  ## Send to and invalid address
  - name: Send to an invalid address
    shell: ./cli sendFromMiner -to {{ invalid_address }} -amount 5000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout_lines[0][7:] != "address is invalid!"
    ignore_errors: true

  ## Send to no address (no argument)
  - name: No address
    shell: ./cli sendFromMiner -amount 5000 -to
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][:22] != "flag needs an argument"
    ignore_errors: true

  ## No address or amount (no argument)
  - name: No address
    shell: ./cli sendFromMiner -amount -to
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stderr_lines[0][-11:] != "parse error"
    ignore_errors: true

  ## No flag
  - name: No flag
    shell: ./cli sendFromMiner
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: deploy_contract
    when: inventory_hostname in groups['NODE1']

  - name: Test
    fail:
      msg: Expected the transaction to fail, but returned {{ deploy_contract.stderr }}
    when: inventory_hostname in groups['NODE1'] and deploy_contract.stdout_lines[0][:5] != "Usage"
    ignore_errors: true

  ## Terminate playbook
  - name: Wait till async tasks terminate
    wait_for:
      timeout: 10

  - name: Remove /go-dappley/bin All Nodes
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/

  - name: Remove /go-dappley/dapp/bin Node1
    shell: rm -r bin
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/
    when: inventory_hostname in groups['NODE1']
