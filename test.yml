---

- hosts: all
  become: true
  become_user: ubuntu
  environment:
    GOPATH: "/home/ubuntu/go"
    GOROOT: "/usr/local/go"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/ubuntu/go/bin"

  tasks:
  - name: Check go environment
    shell: echo $GOPATH && echo $GOROOT && echo $PATH
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
    register: GOENV

  - debug:
      msg: "{{ GOENV }}"

  - name: Check go version
    shell: go version
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
    register: GOVERSION

  - debug:
      msg: "{{ GOVERSION }}"

  - name: Make build
    make:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley
      target: build
      file: /home/ubuntu/go/src/github.com/dappley/go-dappley/Makefile

  - name: Update port in cli
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli/default.conf
      regexp: 'port: 50050'
      replace: 'port: 50051'

  - debug:
      msg: "{{ item }}"
    with_inventory_hostnames:
      - NODE1
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: "{{ ansible_all_ipv4_addresses[0] }}"
    when: inventory_hostname in groups['NODE1']

  - name: Update node1 seed
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/conf/node1.conf
      regexp: '127.0.0.1'
      replace: '{{ item }}'
    with_inventory_hostnames:
      - NODE2
    when: inventory_hostname in groups['NODE1']

  - name: Update node2 seed
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/conf/node2.conf
      regexp: '127.0.0.1'
      replace: '{{ item }}'
    with_inventory_hostnames:
      - NODE1
    when: inventory_hostname in groups['NODE2']

  - name: Update node3 seed
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/conf/node3.conf
      regexp: '127.0.0.1'
      replace: '{{ item }}'
    with_inventory_hostnames:
      - NODE1
    when: inventory_hostname in groups['NODE3']

  - name: Update node4 seed
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/conf/node4.conf
      regexp: '127.0.0.1'
      replace: '{{ item }}'
    with_inventory_hostnames:
      - NODE1
    when: inventory_hostname in groups['NODE4']

  - name: Update node5 seed
    ansible.builtin.replace:
      path: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/conf/node5.conf
      regexp: '127.0.0.1'
      replace: '{{ item }}'
    with_inventory_hostnames:
      - NODE1
    when: inventory_hostname in groups['NODE5']

  - name: Launch node1
    shell: ./dapp -f conf/node1.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE1']
    async: 1000
    poll: 0

  - name: Launch node2
    shell: ./dapp -f conf/node2.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE2']
    async: 1000
    poll: 0

  - name: Launch node3
    shell: ./dapp -f conf/node3.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE3']
    async: 1000
    poll: 0

  - name: Launch node4
    shell: ./dapp -f conf/node4.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE4']
    async: 1000
    poll: 0

  - name: Launch node5
    shell: ./dapp -f conf/node5.conf
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp
    when: inventory_hostname in groups['NODE5']
    async: 1000
    poll: 0

  - name: Create new account
    ansible.builtin.expect:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
      command: ./cli createAccount
      responses:
        'Please input the password for the new account:' : 'account1'
        'Repeat password:' : 'account1'
    when: inventory_hostname in groups['NODE1']

  - name: List account
    ansible.builtin.expect:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
      command: ./cli listAddresses
      responses:
        'Please input the password:' : 'account1'
    when: inventory_hostname in groups['NODE1']
    register: listAddresses

  - debug:
      msg: '{{ listAddresses.stdout_lines }}'
    when: inventory_hostname in groups['NODE1']

  - name: Create another account
    ansible.builtin.expect:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
      command: ./cli createAccount
      responses:
        'Please input the password:' : 'account1'
    when: inventory_hostname in groups['NODE1']

  - name: List accounts
    ansible.builtin.expect:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
      command: ./cli listAddresses
      responses:
        'Please input the password:' : 'account1'
    when: inventory_hostname in groups['NODE1']
    register: listAddresses

  - debug:
      msg: '{{ listAddresses.stdout_lines }}'
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: 'Account1 address: {{ listAddresses.stdout_lines[3][12:] }}'
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: 'Account2 address: {{ listAddresses.stdout_lines[4][12:] }}'
    when: inventory_hostname in groups['NODE1']

  - name: Send money to account 1
    shell: ./cli sendFromMiner -to '{{ listAddresses.stdout_lines[3][12:] }}' -amount 10000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    poll: 10
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    pause:
      seconds: 10

  - name: Check account 1 balance
    shell: ./cli getBalance -address {{ listAddresses.stdout_lines[3][12:] }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance
    when: inventory_hostname in groups['NODE1']

  - name: Check account 2 balance
    shell: ./cli getBalance -address {{ listAddresses.stdout_lines[4][12:] }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: 
        - '{{ account1Balance.stdout_lines }}'
        - '{{ account2Balance.stdout_lines }}'
    when: inventory_hostname in groups['NODE1']

  - name: Send from account 1 to account 2
    shell: ./cli send -from {{ listAddresses.stdout_lines[3][12:] }} -to {{ listAddresses.stdout_lines[4][12:] }} -amount 5000
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    when: inventory_hostname in groups['NODE1']

  - name: Wait 10 seconds to complete transaction
    pause:
      seconds: 10

  - name: Check account 1 balance
    shell: ./cli getBalance -address {{ listAddresses.stdout_lines[3][12:] }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account1Balance
    when: inventory_hostname in groups['NODE1']

  - name: Check account 2 balance
    shell: ./cli getBalance -address {{ listAddresses.stdout_lines[4][12:] }}
    args:
      chdir: /home/ubuntu/go/src/github.com/dappley/go-dappley/dapp/cli
    register: account2Balance
    when: inventory_hostname in groups['NODE1']

  - debug:
      msg: 
        - '{{ account1Balance.stdout_lines }}'
        - '{{ account2Balance.stdout_lines }}'
    when: inventory_hostname in groups['NODE1']